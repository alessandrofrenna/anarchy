#!/bin/bash

# Original reference https://github.com/basecamp/omarchy/blob/dev/bin/omarchy-theme-menu
# ======================================================================================
# Based on Omarchy script: omarchy-theme-menu
# ======================================================================================

source "$HOME/.local/share/anarchy/default/rofi/scripts/commons.sh"

get_theme_name() {
  local config_file=$1
  grep -iE "^name.*=.*$" "${config_file}" | sed -e 's/.*=\s*"//g' -e 's/"$//g'
}

change_theme() {
  local theme_name=$1
  set-theme "${theme_name}"
}

THEMES_DIR="$HOME/.local/share/anarchy/themes"
CURRENT_THEME_DIR="$HOME/.config/anarchy/theme"
CURRENT_THEME_NAME=$(get_theme_name "${CURRENT_THEME_DIR}/theme.toml")

mapfile -t theme_paths < <(find "$THEMES_DIR" -mindepth 1 -maxdepth 1 \( -type d -o -type l \) | sort)

declare -A messages
declare -a theme_names
for theme_path in "${theme_paths[@]}"; do
  theme_name=$(get_theme_name "${theme_path}/theme.toml")
  display_name=$(echo "$theme_name" | sed -E 's/(^|-)([a-z])/\1\u\2/g; s/-/ /g')
  theme_names+=("${theme_name}")
  
  icon=""
  text="${display_name}"
  if [[ "${theme_name}" == "${CURRENT_THEME_NAME}" ]]; then
    icon=""
    text="<i><b>$display_name</b></i>"
  fi
  messages[$theme_name]="$(write_message ${icon} ${text})"
done

if [ $# -gt 0 ]; then
  # If arguments given, use those as the selection
  selection="${@}"
fi

# Don't allow custom entries
echo -e "\0no-custom\x1ftrue"
# Use markup
echo -e "\0markup-rows\x1ftrue"

if [ -z "${selection+x}" ]; then
  for theme_name in "${theme_names[@]}"; do
    echo -e "${messages[$theme_name]}"
  done
else
  # Remove Pango markup, then cut out the icon and leading space
  clean_selection=$(echo "$selection" | sed 's/<[^>]*>//g' | cut -d' ' -f2- | xargs)
  # Convert to lowercase and dash-separated: "Tokyo Night" -> "tokyo-night"
  selected_theme=$(echo "$clean_selection" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
  if [ -n "${selected_theme}" ] && [ -d "${THEMES_DIR}/${selected_theme}" ]; then
    run_bg change_theme "${THEMES_DIR}/${selected_theme}"
    exit 0
  fi
  # # The selection didn't match anything, so raise an error
  echo "Invalid selection: $selection" >&2
  exit 1
fi