#!/bin/bash

# All supported choices
all=(lockscreen logout suspend hibernate reboot shutdown)

# By default, show all (i.e., just copy the array)
show=("${all[@]}")

declare -A texts
texts[lockscreen]="Lock Screen"
texts[logout]="Log Out"
texts[suspend]="Suspend"
texts[hibernate]="Hibernate"
texts[reboot]="Reboot"
texts[shutdown]="Shut Down"

declare -A icons
icons[lockscreen]=""
icons[logout]="󰍃"
icons[suspend]="󰤄"
icons[hibernate]=""
icons[reboot]="󰜉"
icons[shutdown]="󰐥"

declare -A actions
actions[lockscreen]="hyprlock"
actions[logout]="uwsm stop"
actions[suspend]="systemctl suspend-then-hibernate &>/dev/null || hyprlock && systemctl suspend"
actions[hibernate]="systemctl hibernate &>/dev/null || hyprlock && systemctl suspend"
actions[reboot]="systemctl reboot"
actions[shutdown]="systemctl poweroff"

function write_message {
  local icon="<span font_size=\"medium\">$1</span>"
  local text="<span font_size=\"medium\">$2</span>"
  echo -n "\u200e$icon  \u2068$text\u2069"
}

function print_selection {
  echo -e "$1" | $(read -r -d '' entry; echo "echo $entry")
}

declare -A messages

for entry in "${all[@]}"; do
  messages[$entry]=$(write_message "${icons[$entry]}" "${texts[$entry]^}")
done

if [ $# -gt 0 ]; then
  # If arguments given, use those as the selection
  selection="${@}"
fi

# Don't allow custom entries
echo -e "\0no-custom\x1ftrue"
# Use markup
echo -e "\0markup-rows\x1ftrue"

if [ -z "${selection+x}" ]; then
  for entry in "${show[@]}"; do
    echo -e "${messages[$entry]}\0icon\x1f${icons[$entry]}"
  done
else
  for entry in "${show[@]}"; do
    if [ "$selection" = "$(print_selection "${messages[$entry]}")" ]; then
      # Perform the action
      ${actions[$entry]}
      exit 0
    fi
  done
  # The selection didn't match anything, so raise an error
  echo "Invalid selection: $selection" >&2
  exit 1
fi